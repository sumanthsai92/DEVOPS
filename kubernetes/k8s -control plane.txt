after doing k8s every server first code process

sudo kubeadm init --pod-network-cidr=10.10.0.0/16

kubectl cluster-info

#sudo kubeadm init --pod-network-cidr=10.10.0.0/16 after compile this command it shows it#
#To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

  sudo su

#sudo kubeadm init --pod-network-cidr=10.10.0.0/16 after compile this command it shows it#
#Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

exit

containerd

sudo containerd images

pwd

ls -lrt

#You should now deploy a pod network to the cluster:

kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

OR

curl https://projectcalico.docs.tigera.io/manifests/calico.yaml -O

wc calico.yaml

kubectl apply -f calico.yaml

kubectl cluster-info

kubectl get nodes

kubectl get svc

#You can now join any number of control-plane nodes by copying certificate authorities
and service account keys on each node and then running the following as root:#

{#Then you can join any number of worker nodes by running the following on each as root:

#sudo kubeadm init --pod-network-cidr=10.10.0.0/16 after compile this command it shows it a link with a ip address of the k8s-control plane server#}

after above command done in node server check it

kubectl get nodes

kubectl get services                          # List all services in the namespace
kubectl get pods --all-namespaces             # List all pods in all namespaces
kubectl get pods -o wide                      # List all pods in the namespace, with more details
kubectl get rc <rc-name>                      # List a particular replication controller
kubectl get replicationcontroller <rc-name>   # List a particular RC

vi deployment.yml


vi ngnixs-service.yml


kubectl apply -f deployment.yml

kubectl get pods

kubectl get svc

ls -lrt

kubectl get pods

kubectl describe deployment nginx-deployment

kubectl config view

kubectl autoscale deployment nginx-deployment --min=2 --max=10











